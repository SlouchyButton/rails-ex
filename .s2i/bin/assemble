#!/bin/bash

ASSEMBLE_SCRIPT="/usr/libexec/s2i/assemble"

pushd /tmp/src || exit 1

echo "---> Building your Ruby application from source ..."
if [ -f Gemfile ]; then
  ADDTL_BUNDLE_ARGS="--retry 2"
  if [ -f Gemfile.lock ]; then
    bundle config set --local deployment 'true'
  fi

  if [[ "$RAILS_ENV" == "development" || "$RACK_ENV" == "development" ]]; then
    BUNDLE_WITHOUT=${BUNDLE_WITHOUT:-"test"}
  elif [[ "$RAILS_ENV" == "test" || "$RACK_ENV" == "test" ]]; then
    BUNDLE_WITHOUT=${BUNDLE_WITHOUT:-"development"}
  else
    BUNDLE_WITHOUT=${BUNDLE_WITHOUT:-"development:test"}
  fi

  if [ -n "$BUNDLE_WITHOUT" ]; then
    bundle config set --local without "$BUNDLE_WITHOUT"
  fi

  echo "---> Running 'bundle install ${ADDTL_BUNDLE_ARGS}' ..."
  bundle config set --local path './bundle'
  bundle install ${ADDTL_BUNDLE_ARGS}

  echo "---> Cleaning up unused ruby gems ..."
  bundle clean --verbose
fi

if [[ "$RAILS_MASTER_KEY" == "" && ! -e config/master.key ]]; then
	if [[ -e config/secrets.yml.enc ]]; then
		# If the master.key was regenerated while there is already
		# an encoded file with secrets, it can only be decoded with the original key.
		echo "---> WARNING: overwriting secret.yml.enc"
		rm config/secrets.yml.enc
	fi

	echo "---> No master key present in environment, generating ..."
	EDITOR=/bin/true bin/rails credentials:edit
fi

popd

# Remove the .bundle directory before moving the application.
# Otherwise conflicts arise with the .bundle directory created above.
rm -rf .bundle

if [ -x "$ASSEMBLE_SCRIPT" ]; then
	$ASSEMBLE_SCRIPT
fi
